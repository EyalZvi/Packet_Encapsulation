//
// Generated file, do not edit! Created by nedtool 5.6 from Eth.msg.
//

#ifndef __ETH_M_H
#define __ETH_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Eth.msg:17</tt> by nedtool.
 * <pre>
 * message EthMsg extends omnetpp::cPacket
 * {
 *     // For the protocol:
 *     int preamble;
 *     int SFD;
 *     int payload_len;
 *     int FCS;
 * 
 *     // Useful Variables:
 * 
 *     // IP EtherType:
 *     int src_MAC;
 *     int dest_MAC;
 *     int EtherType;  // Types: IP = 0 / Arp request = 1 / Arp reply = 2
 *     int port;
 * 
 *     // ARP EtherType: (When ARP type these are added)
 *     int src_ip;
 *     int dest_ip;
 * 
 *     // Sending Time - For data collection
 *     simtime_t sending_time;
 * 
 *     // Note: As this is a simulation only useful variables are being initialized
 * }
 * </pre>
 */
class EthMsg : public ::omnetpp::cPacket
{
  protected:
    int preamble;
    int SFD;
    int payload_len;
    int FCS;
    int src_MAC;
    int dest_MAC;
    int EtherType;
    int port;
    int src_ip;
    int dest_ip;
    ::omnetpp::simtime_t sending_time;

  private:
    void copy(const EthMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const EthMsg&);

  public:
    EthMsg(const char *name=nullptr, short kind=0);
    EthMsg(const EthMsg& other);
    virtual ~EthMsg();
    EthMsg& operator=(const EthMsg& other);
    virtual EthMsg *dup() const override {return new EthMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getPreamble() const;
    virtual void setPreamble(int preamble);
    virtual int getSFD() const;
    virtual void setSFD(int SFD);
    virtual int getPayload_len() const;
    virtual void setPayload_len(int payload_len);
    virtual int getFCS() const;
    virtual void setFCS(int FCS);
    virtual int getSrc_MAC() const;
    virtual void setSrc_MAC(int src_MAC);
    virtual int getDest_MAC() const;
    virtual void setDest_MAC(int dest_MAC);
    virtual int getEtherType() const;
    virtual void setEtherType(int EtherType);
    virtual int getPort() const;
    virtual void setPort(int port);
    virtual int getSrc_ip() const;
    virtual void setSrc_ip(int src_ip);
    virtual int getDest_ip() const;
    virtual void setDest_ip(int dest_ip);
    virtual ::omnetpp::simtime_t getSending_time() const;
    virtual void setSending_time(::omnetpp::simtime_t sending_time);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const EthMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, EthMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __ETH_M_H

